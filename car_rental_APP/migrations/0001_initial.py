# Generated by Django 2.2.6 on 2022-01-13 18:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                ("is_car_dealer", models.BooleanField(default=False)),
                ("is_customer", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("car_name", models.CharField(max_length=20)),
                ("color", models.CharField(max_length=16)),
                (
                    "capacity",
                    models.CharField(
                        choices=[
                            ("2", "2-osobowy"),
                            ("3", "3-osobowy"),
                            ("4", "4-osobowy"),
                            ("5", "5-osobowy"),
                            ("9", "9-osobowy"),
                        ],
                        default=5,
                        max_length=2,
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                (
                    "engine",
                    models.CharField(
                        choices=[
                            ("PB", "Benzyna"),
                            ("ON", "Diesel"),
                            ("LPG", "Gaz"),
                            ("EE", "Elektryczny"),
                        ],
                        default=0,
                        max_length=3,
                    ),
                ),
                ("ac", models.BooleanField(default=True)),
                ("description", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="CarDealer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mobile", models.CharField(max_length=15)),
                ("email", models.CharField(max_length=30)),
                ("wallet", models.IntegerField(default=0)),
                (
                    "car_dealer_name",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mobile", models.CharField(max_length=15)),
                ("email", models.CharField(max_length=30)),
                (
                    "customer_name",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pincode",
                    models.CharField(
                        max_length=6,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(6),
                            django.core.validators.MaxLengthValidator(6),
                        ],
                    ),
                ),
                ("district_name", models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name="Orders",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rent", models.CharField(max_length=8)),
                ("days", models.CharField(max_length=3)),
                ("is_complete", models.BooleanField(default=False)),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="car_rental_APP.Car",
                    ),
                ),
                (
                    "car_dealer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="car_rental_APP.CarDealer",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="car_rental_APP.Customer",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="customer",
            name="district",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="car_rental_APP.District",
            ),
        ),
        migrations.AddField(
            model_name="cardealer",
            name="district",
            field=models.ManyToManyField(to="car_rental_APP.District"),
        ),
        migrations.AddField(
            model_name="car",
            name="dealer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="car_dealer",
                to="car_rental_APP.CarDealer",
            ),
        ),
        migrations.AddField(
            model_name="car",
            name="district",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="car_rental_APP.District",
            ),
        ),
    ]
